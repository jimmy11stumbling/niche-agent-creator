
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Bot, Sparkles, Lightbulb, User, Code, MessageSquare } from "lucide-react";

interface AgentConfigProps {
  agent: {
    name: string;
    description: string;
    niche: string;
    personality: string;
    systemPrompt: string;
    exampleConversations?: string;
    useDemoMode?: boolean;
  };
}

const AgentConfig: React.FC<AgentConfigProps> = ({ agent }) => {
  return (
    <Card>
      <CardHeader className="pb-2">
        <div className="flex items-center">
          <Bot className="mr-2 h-4 w-4" />
          <CardTitle className="text-base">Agent Configuration</CardTitle>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        <div>
          <h4 className="text-sm font-medium flex items-center">
            <Bot className="h-4 w-4 mr-1 text-primary" />
            Name
          </h4>
          <p className="text-sm text-muted-foreground">
            {agent.name || "Not set"}
          </p>
        </div>
        
        <div>
          <h4 className="text-sm font-medium flex items-center">
            <Sparkles className="h-4 w-4 mr-1 text-primary" />
            Niche
          </h4>
          <p className="text-sm text-muted-foreground">
            {agent.niche || "Not set"}
          </p>
          {agent.niche && (
            <div className="mt-1">
              <Badge variant="outline" className="text-xs">
                {agent.niche}
              </Badge>
            </div>
          )}
        </div>
        
        <div>
          <h4 className="text-sm font-medium flex items-center">
            <Lightbulb className="h-4 w-4 mr-1 text-primary" />
            Description
          </h4>
          <p className="text-sm text-muted-foreground">
            {agent.description || "Not set"}
          </p>
        </div>
        
        <div>
          <h4 className="text-sm font-medium flex items-center">
            <User className="h-4 w-4 mr-1 text-primary" />
            Personality
          </h4>
          <p className="text-sm text-muted-foreground">
            {agent.personality || "Not set"}
          </p>
        </div>
        
        <div>
          <h4 className="text-sm font-medium flex items-center">
            <Code className="h-4 w-4 mr-1 text-primary" />
            System Prompt
          </h4>
          <p className="text-sm text-muted-foreground whitespace-pre-wrap">
            {agent.systemPrompt || "Not set"}
          </p>
        </div>
        
        {agent.exampleConversations && (
          <div>
            <h4 className="text-sm font-medium flex items-center">
              <MessageSquare className="h-4 w-4 mr-1 text-primary" />
              Example Conversations
            </h4>
            <p className="text-sm text-muted-foreground whitespace-pre-wrap">
              {agent.exampleConversations}
            </p>
          </div>
        )}

        {agent.useDemoMode && (
          <div className="mt-4 p-2 bg-yellow-50 dark:bg-yellow-900/20 rounded border border-yellow-200 dark:border-yellow-800">
            <h4 className="text-sm font-medium text-yellow-800 dark:text-yellow-400">Demo Mode Active</h4>
            <p className="text-xs text-yellow-700 dark:text-yellow-500 mt-1">
              Responses are simulated and not generated by the AI model.
            </p>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default AgentConfig;
